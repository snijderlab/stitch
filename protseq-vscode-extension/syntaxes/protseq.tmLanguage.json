{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "protein assembler",
    "patterns": [{
            "include": "#comment"
        },
        {
            "include": "#parameter"
        }
    ],
    "repository": {
        "comment": {
            "name": "comment",
            "begin": "-",
            "end": "\\n",
            "patterns": []
        },
        "parameter": {
            "name": "entity",
            "patterns": [{
                    "include": "#single-parameter"
                },
                {
                    "include": "#multiple-parameter"
                }
            ]
        },
        "single-parameter": {
            "name": "entity",
            "begin": "(?i)^\\s*(version|decoy|runname|maxcores|runtype|cutoffscore|(?:(?:peaks)?(?:path|name|cutoffalc|localcutoffalc|format|minlengthpatch|separator|decimalseparator))|startswith|start|end|step|gapstartpenalty|gapextendpenalty|database|data|includeshortreads|scoring|n|dotdistribution|minimalscore|outputtype|identifier|classchars|ForceOnSingleTemplate)\\s*",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag"
                }
            },
            "end": "\\s*$",
            "patterns": [{
                "include": "#single-parameter-multiple-lines"
            }, {
                "include": "#single-parameter-single-line"
            }]
        },
        "single-parameter-single-line": {
            "begin": "(:)\\s*",
            "end": "\\s*$",
            "beginCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [{
                "include": "#int"
            }, {
                "include": "#floating-point"
            }, {
                "include": "#character-constant"
            }, {
                "include": "#single-line"
            }]
        },
        "single-parameter-multiple-lines": {
            "begin": "(:>)\\s*",
            "end": "\\s*(<:)\\s*",
            "beginCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [{
                "include": "#int"
            }, {
                "include": "#floating-point"
            }, {
                "include": "#character-constant"
            }, {
                "include": "#single-line"
            }, {
                "include": "#multi-line"
            }]
        },
        "multiple-parameter": {
            "begin": "(?i)^\\s*(reads|fastainput|peaks|folder|alphabet|recombine|html|csv|fasta|database|inputparameters|input|report|templatematching)\\s*(->)",
            "end": "(<-)",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag"
                },
                "2": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [{
                "include": "#multiple-parameter"
            }, {
                "include": "#databases"
            }, {
                "include": "#order"
            }, {
                "include": "#single-parameter"
            }, {
                "include": "#comment"
            }]
        },
        "databases": {
            "begin": "(?i)^\\s*(databases)\\s*(->)",
            "end": "(<-)",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag"
                },
                "2": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [{
                "include": "#multiple-parameter"
            }, {
                "include": "#database-group"
            }, {
                "include": "#comment"
            }]
        },
        "database-group": {
            "begin": "(?i)^\\s*([\\w\\s]+)\\s*(->)",
            "end": "(<-)",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.variable"
                },
                "2": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [{
                "include": "#multiple-parameter"
            }, {
                "include": "#comment"
            }]
        },
        "order": {
            "begin": "(?i)^\\s*(order)\\s*",
            "end": "\\s*$",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [{
                "include": "#order-group"
            }, {
                "include": "#order-single"
            }]
        },
        "order-single": {
            "begin": "(:)\\s*",
            "end": "\\s*$",
            "beginCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [{
                "include": "#order-db"
            }, {
                "include": "#gap-constant"
            }]
        },
        "order-group": {
            "begin": "(->)",
            "end": "(<-)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [{
                "include": "#order-single-group"
            }, {
                "include": "#comment"
            }]
        },
        "order-single-group": {
            "begin": "^\\s*([\\w\\s]+)\\s*(:)\\s*",
            "end": "\\s*$",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.variable"
                },
                "2": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [{
                "include": "#order-db"
            }, {
                "include": "#gap-constant"
            }]
        },
        "int": {
            "match": "\\d+",
            "name": "constant.numeric.integer"
        },
        "order-db": {
            "match": "(\\w+)\\s+",
            "name": "entity.name.variable"
        },
        "gap-constant": {
            "match": "\\*",
            "name": "constant.language"
        },
        "floating-point": {
            "match": "\\d*\\.\\d+(?:e\\d+)?",
            "name": "constant.numeric.floating-point"
        },
        "character-constant": {
            "match": "(?i)(?:separate|group|old|x\\+|x|both|absolute|relative|assembly|recombine|templatematching|global|included)",
            "name": "constant.language"
        },
        "single-line": {
            "match": ".+",
            "name": "variable.other"
        },
        "multiple-line": {
            "match": "(?m).+",
            "name": "variable.other"
        }
    },
    "scopeName": "source.protseq"
}