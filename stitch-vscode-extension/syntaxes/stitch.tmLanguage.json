{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "stitch",
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#parameter"
        }
    ],
    "repository": {
        "comment": {
            "name": "comment",
            "begin": "-",
            "end": "\\n",
            "patterns": []
        },
        "parameter": {
            "name": "entity",
            "patterns": [
                {
                    "include": "#single-parameter"
                },
                {
                    "include": "#multiple-parameter"
                }
            ]
        },
        "single-parameter": {
            "name": "entity",
            "begin": "(?i)^\\s*(version|decoy|runname|maxcores|runtype|cutoffscore|(?:(?:peaks)?(?:path|name|cutoffalc|localcutoffalc|format|minlengthpatch|separator|decimalseparator))|startswith|start|end|step|gapstartpenalty|gapextendpenalty|segment|data|includeshortreads|scoring|n|dotdistribution|minimalscore|outputtype|identifier|classchars|enforceunique|folder|gaptail|gaphead|ForceGermlineIsoleucine|Score|Swap|Characters|Identity|Mismatch|GapStart|GapExtend|PatchLength|ambiguitythreshold)\\s*",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag"
                }
            },
            "end": "\\s*$",
            "patterns": [
                {
                    "include": "#single-parameter-multiple-lines"
                },
                {
                    "include": "#single-parameter-single-line"
                }
            ]
        },
        "single-parameter-single-line": {
            "begin": "(:)\\s*",
            "end": "\\s*$",
            "beginCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#int"
                },
                {
                    "include": "#floating-point"
                },
                {
                    "include": "#character-constant"
                },
                {
                    "include": "#single-line"
                }
            ]
        },
        "single-parameter-multiple-lines": {
            "begin": "(:>)\\s*",
            "end": "\\s*(<:)\\s*",
            "beginCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#int"
                },
                {
                    "include": "#floating-point"
                },
                {
                    "include": "#character-constant"
                },
                {
                    "include": "#single-line"
                },
                {
                    "include": "#multi-line"
                }
            ]
        },
        "sets-parameter": {
            "begin": "(?i)^\\s*(sets)\\s*(:>)\\s*",
            "end": "\\s*(<:)\\s*",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag"
                },
                "2": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#symmetric-set"
                },
                {
                    "include": "#asymmetric-set"
                }
            ]
        },
        "multiple-parameter": {
            "begin": "(?i)^\\s*(reads|fastainput|peaks|folder|alphabet|recombine|html|csv|fasta|json|segment|segments|inputparameters|input|report|templatematching|Symmetric sets|asymmetric sets)\\s*(->)",
            "end": "(<-)",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag"
                },
                "2": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#multiple-parameter"
                },
                {
                    "include": "#segments"
                },
                {
                    "include": "#order"
                },
                {
                    "include": "#single-parameter"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#sets-parameter"
                }
            ]
        },
        "segments": {
            "begin": "(?i)^\\s*(segments)\\s*(->)",
            "end": "(<-)",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag"
                },
                "2": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#multiple-parameter"
                },
                {
                    "include": "#segment-group"
                },
                {
                    "include": "#comment"
                }
            ]
        },
        "segment-group": {
            "begin": "(?i)^\\s*([\\w\\s]+)\\s*(->)",
            "end": "(<-)",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.variable"
                },
                "2": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#multiple-parameter"
                },
                {
                    "include": "#comment"
                }
            ]
        },
        "order": {
            "begin": "(?i)^\\s*(order)\\s*",
            "end": "\\s*$",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#order-group"
                },
                {
                    "include": "#order-single"
                }
            ]
        },
        "order-single": {
            "begin": "(:)\\s*",
            "end": "\\s*$",
            "beginCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#order-db"
                },
                {
                    "include": "#gap-constant"
                }
            ]
        },
        "order-group": {
            "begin": "(->)",
            "end": "(<-)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#order-single-group"
                },
                {
                    "include": "#comment"
                }
            ]
        },
        "order-single-group": {
            "begin": "^\\s*([\\w\\s]+)\\s*(:)\\s*",
            "end": "\\s*$",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.variable"
                },
                "2": {
                    "name": "keyword.operator"
                }
            },
            "patterns": [
                {
                    "include": "#order-db"
                },
                {
                    "include": "#gap-constant"
                }
            ]
        },
        "int": {
            "match": "-?\\d+",
            "name": "constant.numeric.integer"
        },
        "order-db": {
            "match": "(\\w+)\\s+",
            "name": "entity.name.variable"
        },
        "gap-constant": {
            "match": "\\*",
            "name": "constant.language"
        },
        "floating-point": {
            "match": "\\d*\\.\\d+(?:e\\d+)?",
            "name": "constant.numeric.floating-point"
        },
        "character-constant": {
            "match": "(?i)(?:separate|group|old|x\\+|x|both|absolute|relative|assembly|recombine|templatematching|global|included)",
            "name": "constant.language"
        },
        "single-line": {
            "match": ".+",
            "name": "variable.other"
        },
        "multiple-line": {
            "match": "(?m).+",
            "name": "variable.other"
        },
        "symmetric-set": {
            "match": "(?:\\s*(?:([^-,]+)(,))+([^-,]+)\\s*(-.*)?\\s*)+",
            "name": "variable.other",
            "captures": {
                "1": {
                    "name": "constant.other"
                },
                "2": {
                    "name": "keyword.operator"
                },
                "3": {
                    "name": "constant.other"
                },
                "4": {
                    "name": "comment"
                }
            }
        },
        "asymmetric-set": {
            "match": "(?:\\s*(?:([^,-]+)(,))*([^,-]+)\\s*(->)\\s*(?:([^,-]+)(,))*([^,-]+)\\s*(-.*)?\\s*)+",
            "name": "variable.other",
            "captures": {
                "1": {
                    "name": "constant.other"
                },
                "2": {
                    "name": "keyword.operator"
                },
                "3": {
                    "name": "constant.other"
                },
                "4": {
                    "name": "keyword.operator"
                },
                "5": {
                    "name": "constant.other"
                },
                "6": {
                    "name": "keyword.operator"
                },
                "7": {
                    "name": "constant.other"
                },
                "8": {
                    "name": "comment"
                }
            }
        }
    },
    "scopeName": "source.stitch"
}